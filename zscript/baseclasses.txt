class SGDWeapon : Weapon
{
	Default
	{
		Weapon.Kickback 80;
		Inventory.PickupSound "misc/wpnpickup";
		//Inventory.ForbiddenTo "DemonizedPlayer";
		+WEAPON.ALT_AMMO_OPTIONAL;
		+WEAPON.NOALERT;
		+WEAPON.NOAUTOAIM;
	}

	States
	{
	Select:
		TNT1 AAA 0 A_Raise;
		"####" "#" 1 A_Raise;
		Goto Select+2;
	Deselect:
		TNT1 AAA 0 A_Lower;
		"####" "#" 1 A_Lower;
		Goto Deselect+2;
	Ready:
		TNT1 A 0;
		Goto ReadyLoop;
	ReadyLoop:
		"####" "#" 1
		{
			A_WeaponReady();
			ACS_NamedExecute("FeatTracker",0);
		}
		Loop;
	Fire:
		TNT1 A 0;
		Goto ReadyLoop;
	AltFire:
		"####" "#" 0 A_JumpIf(CountInv("FinisherToken") < 300,"FinisherFail");
		"####" "#" 0 A_JumpIf(CountInv("FinisherToken") >= 300 && CountInv("FinisherToken") < 600,"Finisher1");
		"####" "#" 0 A_JumpIf(CountInv("FinisherToken") >= 600 && CountInv("FinisherToken") < 900,"Finisher2");
		"####" "#" 0 A_JumpIf(CountInv("FinisherToken") >= 900,"Finisher3");
	FinisherFail:
		"####" "#" 0;
		Goto ReadyLoop;
	Finisher1:
		TNT1 A 0;
		Goto ReadyLoop;
	Finisher2:
		TNT1 A 0;
		Goto ReadyLoop;
	Finisher3:
		TNT1 A 0;
		Goto ReadyLoop;
	}
}

class WeaponUpgrade : Inventory
{
	Default
	{
		Inventory.MaxAmount 1;
		-INVENTORY.INVBAR;
	}
}


class FakePowerup : PowerDamage
// Base class for powerup color setters.
{
	Default
	{
		DamageFactor "Normal", 1.0;
		DamageFactor "Fire", 1.0;
		DamageFactor "HolyWater", 1.0;
		Powerup.Duration 0x7FFFFFFD;
	}
}
